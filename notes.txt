Notes for this week

HTML FORMS: an Intro

    Key components of a form:
        <form>
            - parent element of all input fields
            - has 2 unique attributes
                - action
                    1. defines the location (URL) where the form should send
                        the data to when it is submitted
                - method
                    1. defines the HTTP verb that should be used to make the
                        request to the server
                    2. browsers support only two values: "get" and "post"

        <input>
            - contains a type attribute: tells the browser what kind of input it expects,
                browser enforces different rules for each type of input
            - has a name attribute: represents data as a key-value pair with the value of the
                name attribute set as the key
            - id attribute ties input element with label element by matching label element's
                "for" attribute


    Submitting the form
        Server-side validations ensure that the form is submitted correctly

FORMS WITH EXPRESS

    when creating a form, make sure that the name attribute
        of inputs match up with the holder array of the info
        a user is submitting.  the reasoning is to keep variables
        consistent with frontend and backend.

    A quick aside: Pug layout templates

        couple of ways to easily navigate between pages
            of home and form submission

            1) Could c/p top of index.pug file to the top
                of the guest-form.pug file (not ideal)

            2) block and extends

                block = chunk of Pug code that a "child
                    template can replace"
                    - create a layout file for all templates
                        to share

    Submitting the guest form
        x-www-form-urlencoded
            this format means that the data is formatted in
                a consistent way so that the server understands
                exactly what is being submitted

        Parsing the request body
            Express framework comes with a middleware function
                that does this for us

DATA VALIDATION

    Importance of server-side data validation
        the process of ensuring that the incoming data is correct

        Lack of trust in client-side validations

            example of a form collecting a user's age, make
                sure the field is not blank
                - sets a required attribute to the age <input>

            <form method="post" action="/age">
                <label for="age">Age: </label>
                <input required type="number" id="age" />
                <input type="submit" />
            </form>

            The above example is very easily worked around.

    Serever-side validations
        "So what kind of data validations should you implement
            on the server side?"

        Expected data types
            
